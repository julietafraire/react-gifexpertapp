{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","categories","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","GifGridItem","img","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","respuesta","json","data","gifs","map","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"6MA2CeA,EAxCK,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,cAAmB,EAGbC,mBAAS,IAHI,mBAG1CC,EAH0C,KAG9BC,EAH8B,KAuBjD,OACI,0BAAMC,SAfW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,EAAc,CACVE,GADS,mBAENH,KAEPI,EAAc,OAQd,2BACIM,KAAK,OACLC,MAAOR,EACPS,SAvBc,SAACN,GACvBF,EAAcE,EAAEO,OAAOF,YCOhBG,EAdK,SAAC,GAAW,IAAVC,EAAS,EAATA,IAIVC,EAAcD,EAAdC,MAAOC,EAAOF,EAAPE,IAEf,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCXHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbN,EADa,iDACmCO,UAAUF,GAD7C,+DAGKG,MAAMR,GAHX,cAGbS,EAHa,gBAIEA,EAAUC,OAJZ,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAf,GAAQ,IAAD,EACzB,MAAO,CACHgB,GAAIhB,EAAIgB,GACRf,MAAOD,EAAIC,MACXC,IAAG,UAAEF,EAAIiB,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAcZY,GAdY,4CAAH,sDCKPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEZpB,mBAAS,CAC/B0B,KAAK,GACLO,SAAQ,IAJ0B,mBAE/BC,EAF+B,KAExBC,EAFwB,KAiBtC,OAVAC,qBAAW,WACPjB,EAAQC,GACHiB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGvB,CAACb,IAEIc,EDbwBK,CAAanB,GAAhCU,EAFuB,EAE5BJ,KAAaO,EAFe,EAEfA,QAEpB,OACI,oCACI,wBAAIjB,UAAU,qCAAd,IAAoDI,GAEnDa,EAAU,uBAAGjB,UAAU,oCAAb,WAA8D,KAEzE,yBAAKA,UAAU,aAEHc,EAAOF,KAAK,SAAAf,GAAG,OACX,kBAAC,EAAD,CACI2B,IAAK3B,EAAIgB,GACThB,IAAKA,UEiBtB4B,EAhCM,WAAO,IAAD,EAEazC,mBAAS,CAAC,cAFvB,mBAEhBF,EAFgB,KAEJC,EAFI,KAIvB,OACI,kBAAC,WAAD,KACI,4CAEA,kBAAC,EAAD,CACID,WAAYA,EACZC,cAAeA,IAGnB,6BAEA,4BAEQD,EAAW8B,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CACIoB,IAAKpB,EACLA,SAAUA,UCnBtCsB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.7d0e2a81.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({categories, setCategories}) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2 ) {\r\n            setCategories([\r\n                inputValue,\r\n                ...categories              \r\n            ]);\r\n            setInputValue('')\r\n        }\r\n\r\n        \r\n    }\r\n\r\n    return ( \r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange }\r\n            />\r\n        </form>\r\n\r\n     );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    categories: PropTypes.array.isRequired,\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n \r\nexport default AddCategory;","import React from 'react';\r\n\r\nconst GifGridItem = ({img}) => {\r\n\r\n    // console.log(img);\r\n\r\n    const { title, url} = img;\r\n\r\n    return ( \r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default GifGridItem;","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=8p5smsDrzHm3lop33ouqQG4WXxDydnar`;\r\n\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n    // setImages(gifs);\r\n}","import React from 'react';\r\nimport GifGridItem from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> {category}</h3>\r\n\r\n            {loading ? <p className=\"animate__animated animate__flash\">Loading</p> : null}\r\n\r\n            <div className=\"card-grid\">\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem\r\n                                key={img.id}\r\n                                img={img}\r\n                            />\r\n                        ))\r\n                    }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect (() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n    },[category]);\r\n\r\n    return state; //{data: [], loading: true}\r\n}","import React, { useState, Fragment } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h2>GifExpertApp</h2>\r\n\r\n            <AddCategory \r\n                categories={categories}\r\n                setCategories={setCategories}\r\n            />\r\n\r\n            <hr /> \r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => \r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category} \r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n\r\n            \r\n\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}